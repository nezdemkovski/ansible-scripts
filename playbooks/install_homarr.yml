---
# Playbook: Homarr Dashboard Deployment
# Description: Deploys and configures Homarr dashboard with Traefik integration
#
# This playbook handles:
# - Installation and configuration of Homarr dashboard
# - Traefik integration for secure HTTPS access
# - Docker socket mounting for container integration
# - Persistent volumes for configs, icons, and data
#
# Required Variables (defined in vault.yml):
# - ansible_user: SSH user for remote access
# - ansible_become_password: Sudo password for privileged operations
# - domain_name: Primary domain for the infrastructure
# - local_domain_name: Internal domain name (optional)
# - homarr_subdomain: Subdomain for Homarr access (e.g., 'dash')
#
# Exposed Ports:
# - 7575: Web UI
#
# Security Notes:
# - Traefik handles SSL termination
# - Docker socket is mounted read-only for security
# - All web traffic is encrypted via HTTPS
#
# Usage:
# ansible-playbook -i inventory/hosts.yml playbooks/homarr.yml

- hosts: ubuntu_servers
  become: true
  vars_files:
    - ../group_vars/ubuntu_servers/vault.yml
  vars:
    service_name: "homarr"
    apps_path: "/home/{{ ansible_user }}/apps/{{ service_name }}"
    appdata_path: "/home/{{ ansible_user }}/appdata/{{ service_name }}"
    volume_base_path: "/home/{{ ansible_user }}/appdata"

  tasks:
    - name: Verify required variables
      assert:
        that:
          - domain_name is defined
          - homarr_subdomain is defined
        fail_msg: "Required variables are not defined in vault.yml"

    - name: Stop and remove existing Homarr container if it exists
      community.docker.docker_container:
        name: homarr
        state: absent
      ignore_errors: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0750"
      loop:
        - "{{ apps_path }}"
        - "{{ appdata_path }}"
        - "{{ appdata_path }}/configs"
        - "{{ appdata_path }}/icons"
        - "{{ appdata_path }}/data"

    - name: Generate Docker Compose configuration
      template:
        src: "../files/{{ service_name }}/docker-compose.yml.j2"
        dest: "{{ apps_path }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0640"

    - name: Start Homarr using Docker Compose
      community.docker.docker_compose_v2:
        project_src: "{{ apps_path }}"
        files:
          - docker-compose.yml
        state: present
        pull: always
