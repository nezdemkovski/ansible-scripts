---
# Playbook: Dozzle Deployment
# Description: Deploys and configures Dozzle - a real-time Docker log viewer
#
# This playbook handles:
# - Installation and configuration of Dozzle
# - Traefik integration for secure HTTPS access
# - Docker socket mounting for log access
# - Health check configuration
#
# Required Variables (defined in vault.yml):
# - ansible_user: SSH user for remote access
# - ansible_become_password: Sudo password for privileged operations
# - domain_name: Primary domain for the infrastructure
# - local_domain_name: Internal domain name (optional)
# - dozzle_subdomain: Subdomain for Dozzle access (e.g., 'logs')
#
# Exposed Ports:
# - 30042: HTTP interface (mapped from 8080)
#
# Security Notes:
# - Traefik handles SSL termination
# - Docker socket is mounted read-only for security
# - All web traffic is encrypted via HTTPS
#
# Usage:
# ansible-playbook -i inventory/hosts.yml playbooks/dozzle.yml  --vault-password-file password.txt

- hosts: ubuntu_servers
  become: true
  vars_files:
    - ../group_vars/ubuntu_servers/vault.yml
  vars:
    service_name: "dozzle"
    apps_path: "/home/{{ ansible_user }}/apps/{{ service_name }}"

  tasks:
    - name: Verify required variables
      assert:
        that:
          - domain_name is defined
          - dozzle_subdomain is defined
        fail_msg: "Required variables are not defined in vault.yml"

    - name: Stop and remove existing Dozzle container if it exists
      community.docker.docker_container:
        name: dozzle
        state: absent
      ignore_errors: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0750"
      loop:
        - "{{ apps_path }}"

    - name: Generate Docker Compose configuration
      template:
        src: "../files/{{ service_name }}/docker-compose.yml.j2"
        dest: "{{ apps_path }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0640"

    - name: Start Dozzle using Docker Compose
      community.docker.docker_compose_v2:
        project_src: "{{ apps_path }}"
        files:
          - docker-compose.yml
        state: present
        pull: always
