# Playbook: Infisical Deployment
# Description: Deploys Infisical secrets management platform with all required components
#
# This playbook handles:
# - PostgreSQL database setup
# - Redis cache deployment
# - Infisical backend with database migration
# - Traefik integration for secure HTTPS access
#
# Required Variables (defined in vault.yml):
# - ansible_user: SSH user for remote access
# - infisical_subdomain: Subdomain for Infisical access
# - domain_name: Primary domain for the infrastructure
# - local_domain_name: Internal domain name (optional)
# - postgres_user: PostgreSQL username
# - postgres_password: PostgreSQL password
# - postgres_db: Database name
#
# Exposed Ports:
# - 6379: Redis
#
# Security Notes:
# - Traefik handles SSL termination
# - Separate networks for isolation
# - Database and Redis with secure configurations
#
# Usage:
# ansible-playbook -i inventory/hosts.yml playbooks/infisical.yml --vault-password-file password.txt

- hosts: ubuntu_servers
  become: true
  vars_files:
    - ../group_vars/ubuntu_servers/vault.yml
  vars:
    service_name: "infisical"
    apps_path: "/home/{{ ansible_user }}/apps/{{ service_name }}"
    appdata_path: "/home/{{ ansible_user }}/appdata/{{ service_name }}"

  tasks:
    - name: Verify required variables
      assert:
        that:
          - domain_name is defined
          - infisical_subdomain is defined
          # - postgres_user is defined
          # - postgres_password is defined
          # - postgres_db is defined
        fail_msg: "Required variables are not defined in vault.yml"

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0750"
      loop:
        - "{{ apps_path }}"

    - name: Generate Docker Compose configuration
      template:
        src: "../files/{{ service_name }}/docker-compose.yml"
        dest: "{{ apps_path }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0640"

    - name: Generate environment file
      template:
        src: "../files/{{ service_name }}/.env.j2"
        dest: "{{ apps_path }}/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Start Infisical stack using Docker Compose
      community.docker.docker_compose_v2:
        project_src: "{{ apps_path }}"
        files:
          - docker-compose.yml
        env_files:
          - "{{ apps_path }}/.env"
        state: present
        pull: always
