- hosts: supabase_servers
  become: true
  vars:
    service_name: "supabase"
    supabase_path: "/home/{{ ansible_user }}/supabase"

  tasks:
    - name: Stop and remove existing supabase container if it exists
      community.docker.docker_container:
        name: supabase
        state: absent
      ignore_errors: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0750"
      loop:
        - "{{ supabase_path }}"

    - name: Copy Supabase assets
      copy:
        src: "../files/{{ service_name }}/volumes/"
        dest: "{{ supabase_path }}/volumes/"
        owner: "{{ ansible_user }}"
        mode: "0644"
        remote_src: no

    - name: Generate Docker Compose configuration
      template:
        src: "../files/{{ service_name }}/docker-compose.yml.j2"
        dest: "{{ supabase_path }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0640"

    - name: Generate environment file
      template:
        src: "../files/{{ service_name }}/.env.j2"
        dest: "{{ supabase_path }}/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Start Supabase using Docker Compose
      community.docker.docker_compose_v2:
        project_src: "{{ supabase_path }}"
        files:
          - docker-compose.yml
        env_files:
          - "{{ supabase_path }}/.env"
        state: present
        pull: always
