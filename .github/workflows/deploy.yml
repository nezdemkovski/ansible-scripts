name: Deploy Homelab

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache and install APT packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ansible wireguard resolvconf
          version: 1.0 # Update this when the package list changes

      - name: Get changed services
        id: changed_files
        run: |
          git fetch --prune --unshallow
          CHANGED=$(git diff --name-only origin/master^ origin/master | grep '^docker/' | cut -d'/' -f2 | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "Changed services: $CHANGED"
          echo "changed_services=$CHANGED" >> $GITHUB_OUTPUT
          echo "CHANGED_SERVICES=$CHANGED" >> $GITHUB_ENV

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Setup WireGuard VPN
        run: |
          sudo mkdir -p /etc/wireguard
          echo "${{ secrets.WIREGUARD_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo chmod 600 /etc/wireguard/wg0.conf
          echo "Starting WireGuard..."
          sudo wg-quick up wg0

      - name: Verify WireGuard connection
        run: |
          echo "Checking WireGuard status..."
          sudo wg show
          echo "Checking network interfaces..."
          ip a
          echo "Checking routing table..."
          ip route

      - name: Run Ansible playbook
        if: steps.changed_files.outputs.changed_services != ''
        run: |
          echo "Deploying changed services: ${{ steps.changed_files.outputs.changed_services }}"
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass.txt
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml --vault-password-file vault_pass.txt -e ansible_ssh_private_key_file=~/.ssh/id_rsa
          rm vault_pass.txt

      - name: Skip deployment if no changes
        if: steps.changed_files.outputs.changed_services == ''
        run: echo "No services changed, skipping deploy."
