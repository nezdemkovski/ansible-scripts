---
services:
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - {{ volume_base_path }}/prometheus/config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    pull_policy: always
    networks:
      - traefik-proxy
      - prometheus-net
    labels:
      - traefik.enable=true

      # External host
      - traefik.http.routers.prometheus-external.rule=Host(`{{ prometheus_subdomain }}.{{ domain_name }}`)
      - traefik.http.routers.prometheus-external.entrypoints=websecure
      - traefik.http.routers.prometheus-external.tls=true
      - traefik.http.routers.prometheus-external.tls.certresolver=cloudflare
      - traefik.http.routers.prometheus-external.middlewares=authentik-external@file

      # Internal host
      - traefik.http.routers.prometheus-internal.rule=Host(`{{ prometheus_subdomain }}.{{ local_domain_name }}`)
      - traefik.http.routers.prometheus-internal.entrypoints=websecure
      - traefik.http.routers.prometheus-internal.tls=true
      - traefik.http.routers.prometheus-internal.middlewares=authentik@file

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 9323:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    pull_policy: always
    networks:
      - prometheus-net
volumes:
  prometheus-data:
    driver: local
networks:
  prometheus-net:
    name: prometheus-net
    driver: bridge
  traefik-proxy:
    external: true
