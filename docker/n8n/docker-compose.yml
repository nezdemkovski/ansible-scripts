---
services:
  n8n_postgres:
    image: postgres:17
    container_name: n8n_postgres
    pull_policy: always
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - n8n_postgres:/var/lib/postgresql/data
    networks:
      - n8n-net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h n8n_postgres -p ${POSTGRES_PORT} -U ${POSTGRES_USER}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:1.92.0
    container_name: n8n
    pull_policy: always
    restart: unless-stopped
    ports:
      - 30078:5678
    networks:
      - n8n-net
      - traefik-proxy
    depends_on:
      - n8n_postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN_NAME}.${DOMAIN_NAME}`) || Host(`${SUBDOMAIN_NAME}.${LOCAL_DOMAIN_NAME}`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.tls.certresolver=cloudflare
      - traefik.http.services.n8n.loadbalancer.server.port=5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_HOST=n8n_postgres
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_SCHEMA=${POSTGRES_SCHEMA:-public}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_HOST=${SUBDOMAIN_NAME}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN_NAME}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - ${APPDATA_PATH}:/home/node/.n8n
volumes:
  n8n_postgres:
networks:
  n8n-net:
    name: n8n-net
    driver: bridge
  traefik-proxy:
    external: true
